47: /* MUTANT (del_stmt) */ /*     JSIntn log2 = 0; */ 
47: /* MUTANT (rep_const) */    JSIntn log2 = 1;
47: /* MUTANT (rep_const) */    JSIntn log2 = -1;
49: /* MUTANT (rep_const) */    if (n & (n-0))
49: /* MUTANT (rep_const) */    if (n & (n--1))
49: /* MUTANT (rep_const) */    if (n & (n-((1)+1)))
49: /* MUTANT (negate) */    if(! (n & (n-1)))
50: /* MUTANT (rep_op) */        log2--;
51: /* MUTANT (rep_const) */    if (n >> 0)
51: /* MUTANT (rep_const) */    if (n >> 1)
51: /* MUTANT (rep_const) */    if (n >> -1)
51: /* MUTANT (rep_const) */    if (n >> ((16)+1))
51: /* MUTANT (rep_const) */    if (n >> ((16)-1))
51: /* MUTANT (negate) */    if(! (n >> 16))
52: /* MUTANT (rep_op) */        log2 -= 16, n >>= 16;
52: /* MUTANT (rep_op) */        log2 *= 16, n >>= 16;
52: /* MUTANT (rep_op) */        log2 %= 16, n >>= 16;
52: /* MUTANT (rep_const) */        log2 += 0, n >>= 16;
52: /* MUTANT (rep_const) */        log2 += 1, n >>= 16;
52: /* MUTANT (rep_const) */        log2 += -1, n >>= 16;
52: /* MUTANT (rep_const) */        log2 += ((16)+1), n >>= 16;
52: /* MUTANT (rep_const) */        log2 += ((16)-1), n >>= 16;
52: /* MUTANT (rep_const) */        log2 += 16, n >>= 0;
52: /* MUTANT (rep_const) */        log2 += 16, n >>= 1;
52: /* MUTANT (rep_const) */        log2 += 16, n >>= -1;
52: /* MUTANT (rep_const) */        log2 += 16, n >>= ((16)+1);
52: /* MUTANT (rep_const) */        log2 += 16, n >>= ((16)-1);
53: /* MUTANT (rep_const) */    if (n >> 0)
53: /* MUTANT (rep_const) */    if (n >> 1)
53: /* MUTANT (rep_const) */    if (n >> -1)
53: /* MUTANT (rep_const) */    if (n >> ((8)+1))
53: /* MUTANT (rep_const) */    if (n >> ((8)-1))
53: /* MUTANT (negate) */    if(! (n >> 8))
54: /* MUTANT (rep_op) */        log2 -= 8, n >>= 8;
54: /* MUTANT (rep_op) */        log2 *= 8, n >>= 8;
54: /* MUTANT (rep_op) */        log2 %= 8, n >>= 8;
54: /* MUTANT (rep_const) */        log2 += 0, n >>= 8;
54: /* MUTANT (rep_const) */        log2 += 1, n >>= 8;
54: /* MUTANT (rep_const) */        log2 += -1, n >>= 8;
54: /* MUTANT (rep_const) */        log2 += ((8)+1), n >>= 8;
54: /* MUTANT (rep_const) */        log2 += ((8)-1), n >>= 8;
54: /* MUTANT (rep_const) */        log2 += 8, n >>= 0;
54: /* MUTANT (rep_const) */        log2 += 8, n >>= 1;
54: /* MUTANT (rep_const) */        log2 += 8, n >>= -1;
54: /* MUTANT (rep_const) */        log2 += 8, n >>= ((8)+1);
54: /* MUTANT (rep_const) */        log2 += 8, n >>= ((8)-1);
55: /* MUTANT (rep_const) */    if (n >> 0)
55: /* MUTANT (rep_const) */    if (n >> 1)
55: /* MUTANT (rep_const) */    if (n >> -1)
55: /* MUTANT (rep_const) */    if (n >> ((4)+1))
55: /* MUTANT (rep_const) */    if (n >> ((4)-1))
55: /* MUTANT (negate) */    if(! (n >> 4))
56: /* MUTANT (rep_op) */        log2 -= 4, n >>= 4;
56: /* MUTANT (rep_op) */        log2 *= 4, n >>= 4;
56: /* MUTANT (rep_op) */        log2 %= 4, n >>= 4;
56: /* MUTANT (rep_const) */        log2 += 0, n >>= 4;
56: /* MUTANT (rep_const) */        log2 += 1, n >>= 4;
56: /* MUTANT (rep_const) */        log2 += -1, n >>= 4;
56: /* MUTANT (rep_const) */        log2 += ((4)+1), n >>= 4;
56: /* MUTANT (rep_const) */        log2 += ((4)-1), n >>= 4;
56: /* MUTANT (rep_const) */        log2 += 4, n >>= 0;
56: /* MUTANT (rep_const) */        log2 += 4, n >>= 1;
56: /* MUTANT (rep_const) */        log2 += 4, n >>= -1;
56: /* MUTANT (rep_const) */        log2 += 4, n >>= ((4)+1);
56: /* MUTANT (rep_const) */        log2 += 4, n >>= ((4)-1);
57: /* MUTANT (rep_const) */    if (n >> 0)
57: /* MUTANT (rep_const) */    if (n >> 1)
57: /* MUTANT (rep_const) */    if (n >> -1)
57: /* MUTANT (rep_const) */    if (n >> ((2)+1))
57: /* MUTANT (rep_const) */    if (n >> ((2)-1))
57: /* MUTANT (negate) */    if(! (n >> 2))
58: /* MUTANT (rep_op) */        log2 -= 2, n >>= 2;
58: /* MUTANT (rep_op) */        log2 *= 2, n >>= 2;
58: /* MUTANT (rep_op) */        log2 %= 2, n >>= 2;
58: /* MUTANT (rep_const) */        log2 += 0, n >>= 2;
58: /* MUTANT (rep_const) */        log2 += 1, n >>= 2;
58: /* MUTANT (rep_const) */        log2 += -1, n >>= 2;
58: /* MUTANT (rep_const) */        log2 += ((2)+1), n >>= 2;
58: /* MUTANT (rep_const) */        log2 += ((2)-1), n >>= 2;
58: /* MUTANT (rep_const) */        log2 += 2, n >>= 0;
58: /* MUTANT (rep_const) */        log2 += 2, n >>= 1;
58: /* MUTANT (rep_const) */        log2 += 2, n >>= -1;
58: /* MUTANT (rep_const) */        log2 += 2, n >>= ((2)+1);
58: /* MUTANT (rep_const) */        log2 += 2, n >>= ((2)-1);
59: /* MUTANT (rep_const) */    if (n >> 0)
59: /* MUTANT (rep_const) */    if (n >> -1)
59: /* MUTANT (rep_const) */    if (n >> ((1)+1))
59: /* MUTANT (negate) */    if(! (n >> 1))
60: /* MUTANT (rep_op) */        log2--;
61: /* MUTANT (del_stmt) */ /*     return log2; */ 
70: /* MUTANT (del_stmt) */ /*     JSIntn log2 = 0; */ 
70: /* MUTANT (rep_const) */    JSIntn log2 = 1;
70: /* MUTANT (rep_const) */    JSIntn log2 = -1;
72: /* MUTANT (rep_const) */    if (n >> 0)
72: /* MUTANT (rep_const) */    if (n >> 1)
72: /* MUTANT (rep_const) */    if (n >> -1)
72: /* MUTANT (rep_const) */    if (n >> ((16)+1))
72: /* MUTANT (rep_const) */    if (n >> ((16)-1))
72: /* MUTANT (negate) */    if(! (n >> 16))
73: /* MUTANT (rep_op) */        log2 -= 16, n >>= 16;
73: /* MUTANT (rep_op) */        log2 *= 16, n >>= 16;
73: /* MUTANT (rep_op) */        log2 %= 16, n >>= 16;
73: /* MUTANT (rep_const) */        log2 += 0, n >>= 16;
73: /* MUTANT (rep_const) */        log2 += 1, n >>= 16;
73: /* MUTANT (rep_const) */        log2 += -1, n >>= 16;
73: /* MUTANT (rep_const) */        log2 += ((16)+1), n >>= 16;
73: /* MUTANT (rep_const) */        log2 += ((16)-1), n >>= 16;
73: /* MUTANT (rep_const) */        log2 += 16, n >>= 0;
73: /* MUTANT (rep_const) */        log2 += 16, n >>= 1;
73: /* MUTANT (rep_const) */        log2 += 16, n >>= -1;
73: /* MUTANT (rep_const) */        log2 += 16, n >>= ((16)+1);
73: /* MUTANT (rep_const) */        log2 += 16, n >>= ((16)-1);
74: /* MUTANT (rep_const) */    if (n >> 0)
74: /* MUTANT (rep_const) */    if (n >> 1)
74: /* MUTANT (rep_const) */    if (n >> -1)
74: /* MUTANT (rep_const) */    if (n >> ((8)+1))
74: /* MUTANT (rep_const) */    if (n >> ((8)-1))
74: /* MUTANT (negate) */    if(! (n >> 8))
75: /* MUTANT (rep_op) */        log2 -= 8, n >>= 8;
75: /* MUTANT (rep_op) */        log2 *= 8, n >>= 8;
75: /* MUTANT (rep_op) */        log2 %= 8, n >>= 8;
75: /* MUTANT (rep_const) */        log2 += 0, n >>= 8;
75: /* MUTANT (rep_const) */        log2 += 1, n >>= 8;
75: /* MUTANT (rep_const) */        log2 += -1, n >>= 8;
75: /* MUTANT (rep_const) */        log2 += ((8)+1), n >>= 8;
75: /* MUTANT (rep_const) */        log2 += ((8)-1), n >>= 8;
75: /* MUTANT (rep_const) */        log2 += 8, n >>= 0;
75: /* MUTANT (rep_const) */        log2 += 8, n >>= 1;
75: /* MUTANT (rep_const) */        log2 += 8, n >>= -1;
75: /* MUTANT (rep_const) */        log2 += 8, n >>= ((8)+1);
75: /* MUTANT (rep_const) */        log2 += 8, n >>= ((8)-1);
76: /* MUTANT (rep_const) */    if (n >> 0)
76: /* MUTANT (rep_const) */    if (n >> 1)
76: /* MUTANT (rep_const) */    if (n >> -1)
76: /* MUTANT (rep_const) */    if (n >> ((4)+1))
76: /* MUTANT (rep_const) */    if (n >> ((4)-1))
76: /* MUTANT (negate) */    if(! (n >> 4))
77: /* MUTANT (rep_op) */        log2 -= 4, n >>= 4;
77: /* MUTANT (rep_op) */        log2 *= 4, n >>= 4;
77: /* MUTANT (rep_op) */        log2 %= 4, n >>= 4;
77: /* MUTANT (rep_const) */        log2 += 0, n >>= 4;
77: /* MUTANT (rep_const) */        log2 += 1, n >>= 4;
77: /* MUTANT (rep_const) */        log2 += -1, n >>= 4;
77: /* MUTANT (rep_const) */        log2 += ((4)+1), n >>= 4;
77: /* MUTANT (rep_const) */        log2 += ((4)-1), n >>= 4;
77: /* MUTANT (rep_const) */        log2 += 4, n >>= 0;
77: /* MUTANT (rep_const) */        log2 += 4, n >>= 1;
77: /* MUTANT (rep_const) */        log2 += 4, n >>= -1;
77: /* MUTANT (rep_const) */        log2 += 4, n >>= ((4)+1);
77: /* MUTANT (rep_const) */        log2 += 4, n >>= ((4)-1);
78: /* MUTANT (rep_const) */    if (n >> 0)
78: /* MUTANT (rep_const) */    if (n >> 1)
78: /* MUTANT (rep_const) */    if (n >> -1)
78: /* MUTANT (rep_const) */    if (n >> ((2)+1))
78: /* MUTANT (rep_const) */    if (n >> ((2)-1))
78: /* MUTANT (negate) */    if(! (n >> 2))
79: /* MUTANT (rep_op) */        log2 -= 2, n >>= 2;
79: /* MUTANT (rep_op) */        log2 *= 2, n >>= 2;
79: /* MUTANT (rep_op) */        log2 %= 2, n >>= 2;
79: /* MUTANT (rep_const) */        log2 += 0, n >>= 2;
79: /* MUTANT (rep_const) */        log2 += 1, n >>= 2;
79: /* MUTANT (rep_const) */        log2 += -1, n >>= 2;
79: /* MUTANT (rep_const) */        log2 += ((2)+1), n >>= 2;
79: /* MUTANT (rep_const) */        log2 += ((2)-1), n >>= 2;
79: /* MUTANT (rep_const) */        log2 += 2, n >>= 0;
79: /* MUTANT (rep_const) */        log2 += 2, n >>= 1;
79: /* MUTANT (rep_const) */        log2 += 2, n >>= -1;
79: /* MUTANT (rep_const) */        log2 += 2, n >>= ((2)+1);
79: /* MUTANT (rep_const) */        log2 += 2, n >>= ((2)-1);
80: /* MUTANT (rep_const) */    if (n >> 0)
80: /* MUTANT (rep_const) */    if (n >> -1)
80: /* MUTANT (rep_const) */    if (n >> ((1)+1))
80: /* MUTANT (negate) */    if(! (n >> 1))
81: /* MUTANT (rep_op) */        log2--;
82: /* MUTANT (del_stmt) */ /*     return log2; */ 
